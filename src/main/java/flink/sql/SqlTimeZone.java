package flink.sql;

/**
 * 2.6.SQL时区问题
 * 2.6.1.SQL时区解决的问题
 * 首先说一下这个问题的背景
 * 大家想一下离线Hive环境中，有遇到过时区时区相关的问题吗？
 * 全少博主目前没有碰到过，因为这个问题在底层的数据集成系统都已经给解决了，小伙伴萌掌到手的ODS层表都是已经
 * 按照所在地区的时区给格式化好的了。
 * 举个例子：小伙伴萌看到日期分区为2022-01-01的Hive表时，可以默认认为该分区中的数据就对应到你所在地区的时
 * 区的2022-01-01日的数据
 * 但是Flink中时区问题要特别引起关注，不加小心就会误用
 * 而本节SQL时区旨在帮助大家了解到以下两个场景的问题★在1.13之前，DDLcreatetable中使用PROCTIMEO指定处理时间列时，返回值类型为TIMESTAMP（3）类型，而
 * TIMESTAMP（3）是不带任何时区信息的，默认为UTC时间（0时区）。
 * 2.使用StreamTableEnvironment:createTemporaryview将DataStream转为Table时，注册处理时间
 * （proctime.proctime）、事件时间列（rowtime.rowtime）时，两列时间类型也为TIMESTAMP（3）类型，不带时区信
 * 而以上两个场景就会导致在北京时区的用户使用TIMESTAMP（3）类型的时间列开最常用的1天的窗口时，划分出来的窗口范围是北京时间
 * 的[2022-01-0108:00:00，2022-01-0208:00:00]，而不是北京时间的[2022-01-0100:00:00，2022-01-0200:00:00]。
 * 因为TIMESTAMP3）是默认的UTC时间，即0时区。北京时区的用户将TIMESTAMP3）类型时间属性列转为STRING类型的数据展示时，也是UTC时区的，而不是北
 * 京时间的。
 * 因此充分了解本节的知识内容可以很好的帮你避免时区问题错误
 * <p>
 * 2.6.1.SQL时间类型FlinkSQL支持TIMESTAMP（不带时区信息的时间）、TIMESTAMPLTZ（带时区信息的时间）TIMESTAMP（不带时区信息的时间）：是通过一个年，月，日，小时，分钟，秒和小数秒的字符串来指定
 * 举例：1970-01-0100:00:04.001为什么要使用字符串来指定呢？因为此种类型不带时区信息，所以直接用一个字符串指定就好了
 * ★那TIMESTAMP字符串的时间代表的是什么时区的时间呢？UTC时区，也就是默认0时区，对应中国北京是东八
 * 区TIMESTAMP_LTZ（带时区信息的时间）：没有字符串来指定，而是通过java标准epoch时间1970-01
 * 01T00:00:00Z开始计算的毫秒数。举例：1640966400000其时区信息是怎么指定的呢？是通过本次任务中的时区配置参数table.local-time-zone设置的
 * 时间本身也不带有时区信息，为什么要使用时间来指定呢？就是因为时间不带有时区信息，所以我们通过
 * 配置table.local-time-zone时区参数之后，就能将一个不带有时区信息的时间转换为带有时区信息的字符串了。举
 * 例：table.local-time-zone为Asia/shanghai时，4001时间转化为字符串的效果是1970-01-0108:00:04.001
 * 如果你还对时区问题有疑感，可以参考博主写的一篇时区相关的文章
 * 《踩坑记Flink天级别窗口中存在的时区问题》
 * 2.6.2.时区参数生效的SQL时间函数
 * 以下SQL中的时间函数都会受到时区参数的影响，从而做到最后显示给用户的时间、、窗口的划分都按照用户设置时区之
 * 内的时间。
 * LOCALTIME
 * LOCALTIMESTAMP
 * CURRENT_DATE
 * CURRENT_TIME
 * CURRENT_TIMESTAMP
 * CURRENT_ROW_TIMESTAMP()
 * NOW()
 * PROCTIME():其中PROCTIME()在1.13版本及之后版本，返回值类型是TIMESTAMP_LTZ（3）
 */
public class SqlTimeZone {
   //在Flink Sql Client中执行结果如下
    /**
     * Flink SQL> SET sql-client.execution.result-mode=tableau;
     * Flink SQL> CREATE VIEW MyView1 AS SELECT LOCALTIME, LOCALTIMESTAMP, CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, CURRENT_ROW_TIMESTAMP(), NOW(), PROCTIME();
     * Flink SQL> DESC MyView1;
     *
     * +------------------------+-----------------------------+-------+-----+--------+-----------+
     * |                   name |                        type |  null | key | extras | watermark |
     * +------------------------+-----------------------------+-------+-----+--------+-----------+
     * |              LOCALTIME |                     TIME(0) | false |     |        |           |
     * |         LOCALTIMESTAMP |                TIMESTAMP(3) | false |     |        |           |
     * |           CURRENT_DATE |                        DATE | false |     |        |           |
     * |           CURRENT_TIME |                     TIME(0) | false |     |        |           |
     * |      CURRENT_TIMESTAMP |            TIMESTAMP_LTZ(3) | false |     |        |           |
     * |CURRENT_ROW_TIMESTAMP() |            TIMESTAMP_LTZ(3) | false |     |        |           |
     * |                  NOW() |            TIMESTAMP_LTZ(3) | false |     |        |           |
     * |             PROCTIME() | TIMESTAMP_LTZ(3) *PROCTIME* | false |     |        |           |
     * +------------------------+-----------------------------+-------+-----+--------+-----------+
     *
     * Flink SQL> SET table.local-time-zone=UTC;
     * Flink SQL> SELECT * FROM MyView1;
     *
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     * | LOCALTIME |          LOCALTIMESTAMP | CURRENT_DATE | CURRENT_TIME |       CURRENT_TIMESTAMP | CURRENT_ROW_TIMESTAMP() |                   NOW() |              PROCTIME() |
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     * |  15:18:36 | 2021-04-15 15:18:36.384 |   2021-04-15 |     15:18:36 | 2021-04-15 15:18:36.384 | 2021-04-15 15:18:36.384 | 2021-04-15 15:18:36.384 | 2021-04-15 15:18:36.384 |
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     *
     * Flink SQL> SET table.local-time-zone=Asia/Shanghai;
     * Flink SQL> SELECT * FROM MyView1;
     *
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     * | LOCALTIME |          LOCALTIMESTAMP | CURRENT_DATE | CURRENT_TIME |       CURRENT_TIMESTAMP | CURRENT_ROW_TIMESTAMP() |                   NOW() |              PROCTIME() |
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     * |  23:18:36 | 2021-04-15 23:18:36.384 |   2021-04-15 |     23:18:36 | 2021-04-15 23:18:36.384 | 2021-04-15 23:18:36.384 | 2021-04-15 23:18:36.384 | 2021-04-15 23:18:36.384 |
     * +-----------+-------------------------+--------------+--------------+-------------------------+-------------------------+-------------------------+-------------------------+
     *
     *
     * Flink SQL> CREATE VIEW MyView2 AS SELECT TO_TIMESTAMP_LTZ(4001, 3) AS ltz, TIMESTAMP '1970-01-01 00:00:01.001'  AS ntz;
     * Flink SQL> DESC MyView2;
     *
     * +------+------------------+-------+-----+--------+-----------+
     * | name |             type |  null | key | extras | watermark |
     * +------+------------------+-------+-----+--------+-----------+
     * |  ltz | TIMESTAMP_LTZ(3) |  true |     |        |           |
     * |  ntz |     TIMESTAMP(3) | false |     |        |           |
     * +------+------------------+-------+-----+--------+-----------+
     *
     * Flink SQL> SET table.local-time-zone=UTC;
     * Flink SQL> SELECT * FROM MyView2;
     *
     * +-------------------------+-------------------------+
     * |                     ltz |                     ntz |
     * +-------------------------+-------------------------+
     * | 1970-01-01 00:00:04.001 | 1970-01-01 00:00:01.001 |
     * +-------------------------+-------------------------+
     *
     * Flink SQL> SET table.local-time-zone=Asia/Shanghai;
     * Flink SQL> SELECT * FROM MyView2;
     *
     * +-------------------------+-------------------------+
     * |                     ltz |                     ntz |
     * +-------------------------+-------------------------+
     * | 1970-01-01 08:00:04.001 | 1970-01-01 00:00:01.001 |
     * +-------------------------+-------------------------+
     *
     * Flink SQL> CREATE VIEW MyView3 AS SELECT ltz, CAST(ltz AS TIMESTAMP(3)), CAST(ltz AS STRING), ntz, CAST(ntz AS TIMESTAMP_LTZ(3)) FROM MyView2;
     * Flink SQL> DESC MyView3;
     * +-------------------------------+------------------+-------+-----+--------+-----------+
     * |                          name |             type |  null | key | extras | watermark |
     * +-------------------------------+------------------+-------+-----+--------+-----------+
     * |                           ltz | TIMESTAMP_LTZ(3) |  true |     |        |           |
     * |     CAST(ltz AS TIMESTAMP(3)) |     TIMESTAMP(3) |  true |     |        |           |
     * |           CAST(ltz AS STRING) |           STRING |  true |     |        |           |
     * |                           ntz |     TIMESTAMP(3) | false |     |        |           |
     * | CAST(ntz AS TIMESTAMP_LTZ(3)) | TIMESTAMP_LTZ(3) | false |     |        |           |
     * +-------------------------------+------------------+-------+-----+--------+-----------+
     *
     * Flink SQL> SELECT * FROM MyView3;
     *
     * +-------------------------+---------------------------+-------------------------+-------------------------+-------------------------------+
     * |                     ltz | CAST(ltz AS TIMESTAMP(3)) |     CAST(ltz AS STRING) |                     ntz | CAST(ntz AS TIMESTAMP_LTZ(3)) |
     * +-------------------------+---------------------------+-------------------------+-------------------------+-------------------------------+
     * | 1970-01-01 08:00:04.001 |   1970-01-01 08:00:04.001 | 1970-01-01 08:00:04.001 | 1970-01-01 00:00:01.001 |       1970-01-01 00:00:01.001 |
     * +-------------------------+---------------------------+-------------------------+-------------------------+-------------------------------+
     */
}
