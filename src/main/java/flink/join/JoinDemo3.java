package flink.join;

/**
 * 热存储维表
 *
 * (2) 使用异步IO来提高访问吞吐量
 * Flink与外部存储系统进行读写操作的时候可以使用同步方式，也就是发送一个请求后等待外部系统响应，然后再发送第二个读写请求，这样的方式吞吐量比较低，可以用提高并行度的方式来提高吞吐量，但是并行度多了也就导致了进程数量多了，占用了大量的资源。
 * Flink中可以使用异步IO来读写外部系统，这要求外部系统客户端支持异步IO，不过目前很多系统都支持异步IO客户端。但是如果使用异步就要涉及到三个问题：
 * 超时：如果查询超时那么就认为是读写失败，需要按失败处理；
 * 并发数量：如果并发数量太多，就要触发Flink的反压机制来抑制上游的写入;
 * 返回顺序错乱：顺序错乱了要根据实际情况来处理，Flink支持两种方式：允许乱序、保证顺序。
 */
public class JoinDemo3 {

}
